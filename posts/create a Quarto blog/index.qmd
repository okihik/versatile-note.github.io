---
title: "Create a Quarto Blog"
date: "2025-07-05"
categories: [Quarto Blog]
---

This is a tutorial on how to create a new Quarto blog using the RStudio interface.

This tutorial is based on [this website](https://quarto.org/docs/publishing/), and inspired by [this blog](https://lab-notes.hakyimlab.org/post/2023-09-15-howto-blog/#create-a-new-post) and [this video](https://www.youtube.com/watch?v=arzBRW5XIkg).

The procedure for publishing a Quarto blog using GitHub Pages and GitHub Actions is as follows:

## 1. Create Project in RStudio

-   Create a new Quarto blog project in RStudio.

-   Name the directory with the desired URL (e.g., "yourusername.github.io" for a personal blog).

-   Ensure "Create a git repository" and "Use renv with this project" are checked.

## 2. Set up GitHub Repository

-   Create a new public repository on GitHub with the same name, "yourusername.github.io", as the RStudio project directory.

## 3. Push Local to GitHub

-   Use terminal to link the local project folder to the new GitHub repository.

-   Commit and push the initial project files to the main branch on GitHub.

## 4. Create gh-pages Branch

-   On GitHub, create a new branch named "gh-pages".

## 5. Set up GitHub Actions Workflow

-   In your RStudio project, create the folder structure: ".github/workflows/".

-   Inside workflows, create a new text file named publish.yml.

-   Copy the R EnV example code chunk from [the Quarto documentation for publishing to GitHub Pages](https://quarto.org/docs/publishing/gi...) and paste it into publish.yml.

-   Save, commit, and push these changes to the main branch on GitHub.

## 6. Configure GitHub Pages

-   On GitHub, go to your repository's Settings, then Pages.

-   Under "Branch", select gh-pages and click Save.

## 7. Monitore Workflow and Visit Site

-   Go to the Actions tab on GitHub to monitor the running workflows.

-   Once all workflows have successfully completed, return to Settings and then Pages.

-   Click "Visit site" to view your live Quarto website.

After this setup, any future changes committed to the repository will automatically update the blog without local rendering.