{
  "hash": "d96fbf46327ce1dc975ae10278be70f1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Optimal Inventory Calculation: A Dynamic Approach\"\ndate: \"2025-08-29\"\ncategories: [\"Inventory Management\"]\n---\n\n\n## Calculating Optimal Inventory: A Dynamic Perspective\n\nIn our ongoing series on dynamic production and inventory management, we now delve into the practical aspect of **optimal inventory calculation**. This post will explore the methodology for determining appropriate inventory levels. The goal is to understand how various factors influence optimal inventory and how a dynamic approach can lead to more efficient supply chain management.\n\n### Understanding the Optimal Inventory Calculation Tool\n\nThe tocken.com website provides a tool for calculating optimal inventory based on various input parameters related to demand, lead time, and ordering policies. This tool is rooted in the \"Inventory Dynamic Model,\" which emphasizes the dynamic nature of inventory rather than static stock levels. For those unfamiliar with the foundational concepts, it is recommended to review the \"Inventory Dynamic Management Basics\" and related literature on the website.\n\n### Input Parameters for Optimal Inventory Calculation\n\nThe calculation of optimal inventory requires several key input parameters, which are categorized as follows:\n\n#### 1. Order Quantity (受注量)\n\nThis section captures information about customer orders and their variability.\n\n-   **Data Aggregation Unit Time (データ集計単位時間):** This defines the time unit for collecting order data (e.g., daily, weekly, monthly). If order data is collected daily, the unit time is 1 day.\n-   **Average Number of Orders (平均受注件数):** The average number of orders received per unit time.\n-   **Standard Deviation of Number of Orders (件数・標準偏差):** The standard deviation of the number of orders received per unit time, indicating the variability in order frequency.\n-   **Average Order Quantity per Order (平均受注数量/件):** The average quantity of items per order. This should ideally be calculated from the same data used for the number of orders.\n-   **Standard Deviation of Order Quantity per Order (量/件・標準偏差):** The standard deviation of the quantity per order, reflecting variability in order size.\n\n#### 2. Delivery Lead Time (納入リードタイム)\n\nThis refers to the time from placing an order until the goods are received in inventory.\n\n-   **Average Delivery Lead Time (平均納入リードタイム):** The average time it takes for an order to be delivered. This should be in the same time unit as the data aggregation unit time.\n-   **Standard Deviation of Delivery Lead Time (標準偏差):** The standard deviation of the delivery lead time. If there is no variability, this value should be 0.\n\n*Note: While the website primarily uses standard deviation for variability, it mentions that if variance or coefficient of variation data is available, it can be converted to standard deviation using the formula: Standard Deviation =* $\\sqrt{\\text{Variance}}$ or Standard Deviation = Average Value $\\times$ Coefficient of Variation.\n\n#### 3. Calculation Execution (計算実行)\n\nThis section involves setting the service level and defining the ordering policy.\n\n-   **Service Rate (サービス率):** This is the desired percentage of customer demand to be met from stock, ranging from 50% to 99%. It is inversely related to the stockout rate (Service Rate = 100% - Stockout Rate).\n\n-   **Order Interval Guideline (発注間隔目安):** An approximate frequency of ordering, based on current practice or experience. This helps in setting initial values for the ordering methods.\n\n-   **Apply Conditions (条件反映):** Clicking this button populates the fields for Quantity-Based Ordering, Time-Based Ordering, and Order-Count Based Ordering with equivalent values derived from the \"Order Interval Guideline.\"\n\n    -   **Quantity-Based Order Quantity (定量発注量):** The fixed quantity to order when inventory reaches a reorder point.\n    -   **Time-Based Order Interval (定期発注間隔):** The fixed time interval between orders.\n    -   **Order-Count Based Order Count (定件発注件数):** The fixed number of orders to trigger a replenishment.\n\n    *Note: While all three ordering methods can be compared simultaneously, unnecessary methods can be set to 0.*\n\nClicking the **\"Calculate Execution\" (計算実行)** button displays the calculation results for \"Replenishment Inventory\" (平均 and 分散) and \"Optimal Inventory\" (適正在庫).\n\n### Example Calculation\n\nThe website provides an example calculation with the following conditions:\n\n-   Data aggregation unit time: 1 day (24 hours)\n-   Average number of orders: 2 orders/day, Standard deviation: 1.41\n-   Average quantity per order: 5 units, Standard deviation: 1.25\n-   Delivery lead time: 10 days (constant, so standard deviation: 0)\n-   Order cycle guideline: 4 days\n\nInputting these values and clicking \"Apply Conditions\" yields:\n\n-   Quantity-Based Order Quantity: 40.0 (calculated as 4 days \\* 2 orders/day \\* 5 units/order)\n-   Time-Based Order Interval: 4.0\n-   Order-Count Based Order Count: 8.0 (calculated as 4 days \\* 2 orders/day)\n\nSetting the service rate to 99% and clicking \"Calculate Execution\" produces the following results:\n\n| Ordering Method   | Average | Variance | Optimal Inventory |\n|:------------------|:--------|:---------|:------------------|\n| Quantity-Based    | 122.5   | 674.1    | 183               |\n| Time-Based        | 120.0   | 773.5    | 185               |\n| Order-Count Based | 117.5   | 672.5    | 178               |\n\n### Underlying Calculation Formulas\n\nThe website provides the following formulas for calculating the average and variance of replenishment inventory for each ordering method:\n\n**定件発注 (Order-Count Based Ordering)**\n\n$$\\text{Average} = \\bar{Q} \\cdot \\left(\\bar{N} + \\frac{N_c - 1}{2}\\right)$$\n\n$$\\text{Variance} = \\bar{Q}^2 \\cdot (V_n + \\bar{N}^2 \\cdot C_t^2) + (\\bar{N} + N_c - 1) \\cdot V_q + \\frac{(\\bar{Q} \\cdot N_c)^2}{12}$$\n\n**定期発注 (Time-Based Ordering)**\n\n$$\\text{Average} = \\bar{Q} \\cdot \\left(\\bar{N} + \\frac{\\bar{N_y}}{2}\\right)$$\n\n$$\\text{Variance} = \\bar{Q}^2 \\cdot (V_n + \\bar{N}^2 \\cdot C_t^2) + (\\bar{N} + \\bar{N_y}) \\cdot V_q + \\frac{(\\bar{Q} \\cdot \\bar{N_y})^2}{12}$$\n\n**定量発注 (Quantity-Based Ordering)**\n\n$$\\text{Average} = \\bar{Q} \\cdot \\left(\\bar{N} + \\frac{1}{2}\\right) + \\frac{O_c}{2}$$\n\n$$\\text{Variance} = \\bar{Q}^2 \\cdot (V_n + \\bar{N}^2 \\cdot C_t^2) + (\\bar{N} + \\frac{1}{2}) \\cdot V_q + \\frac{O_c^2}{12}$$\n\nWhere: \\* $N$: Number of orders per delivery lead time \\* $V_n$: Variance of $N$ \\* $Q$: Quantity per order \\* $V_q$: Variance of $Q$ \\* $N_c$: Fixed number of orders for order-count based ordering \\* $N_y$: Number of orders per order cycle (interval) \\* $V_{ny}$: Variance of $N_y$ \\* $C_t$: Coefficient of variation of delivery lead time \\* $O_c$: Fixed order quantity for quantity-based ordering \\* $\\bar{X}$: Average value of $X$\n\nThese formulas are crucial for understanding the mathematical basis of the optimal inventory calculation. They highlight how the variability in demand and lead time, along with the chosen ordering policy, directly impacts the required replenishment inventory and, consequently, the optimal inventory level.\n\n### Interactive Optimal Inventory Calculator\n\nThis interactive tool allows you to calculate optimal inventory levels based on various demand and lead time parameters.\n\n::: {#app-ui}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\n\nfluidPage(\n  titlePanel(\"Optimal Inventory Calculator\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      h4(\"1. Order Quantity\"),\n      numericInput(\"data_unit_time\", \"Data Aggregation Unit Time (days)\", value = 1, min = 1),\n      numericInput(\"avg_orders\", \"Average Number of Orders (per day)\", value = 2, min = 0),\n      numericInput(\"sd_orders\", \"Standard Deviation of Number of Orders\", value = 1.41, min = 0),\n      numericInput(\"avg_qty_per_order\", \"Average Quantity per Order\", value = 5, min = 0),\n      numericInput(\"sd_qty_per_order\", \"Standard Deviation of Quantity per Order\", value = 1.25, min = 0),\n      \n      h4(\"2. Delivery Lead Time\"),\n      numericInput(\"avg_lead_time\", \"Average Delivery Lead Time (days)\", value = 10, min = 0),\n      numericInput(\"sd_lead_time\", \"Standard Deviation of Delivery Lead Time\", value = 0, min = 0),\n      \n      h4(\"3. Calculation Execution\"),\n      sliderInput(\"service_rate\", \"Service Rate (%)\", min = 50, max = 99, value = 99),\n      numericInput(\"order_interval_guideline\", \"Order Interval Guideline (days)\", value = 4, min = 0),\n      actionButton(\"apply_conditions\", \"Apply Conditions\"),\n      \n      h5(\"Derived Ordering Parameters:\"),\n      numericInput(\"qty_based_order_qty\", \"Quantity-Based Order Quantity\", value = 40, min = 0),\n      numericInput(\"time_based_order_interval\", \"Time-Based Order Interval\", value = 4, min = 0),\n      numericInput(\"order_count_based_order_count\", \"Order-Count Based Order Count\", value = 8, min = 0),\n      \n      actionButton(\"calculate\", \"Calculate Optimal Inventory\"),\n      actionButton(\"reset\", \"Reset\")\n    ),\n    \n    mainPanel(\n      h4(\"Calculation Results\"),\n      tableOutput(\"results_table\")\n    )\n  )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"container-fluid\">\n<h2>Optimal Inventory Calculator</h2>\n<div class=\"row\">\n<div class=\"col-sm-4\">\n<form class=\"well\" role=\"complementary\">\n<h4>1. Order Quantity</h4>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"data_unit_time-label\" for=\"data_unit_time\">Data Aggregation Unit Time (days)</label>\n<input id=\"data_unit_time\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1\" data-update-on=\"change\" min=\"1\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"avg_orders-label\" for=\"avg_orders\">Average Number of Orders (per day)</label>\n<input id=\"avg_orders\" type=\"number\" class=\"shiny-input-number form-control\" value=\"2\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"sd_orders-label\" for=\"sd_orders\">Standard Deviation of Number of Orders</label>\n<input id=\"sd_orders\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1.41\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"avg_qty_per_order-label\" for=\"avg_qty_per_order\">Average Quantity per Order</label>\n<input id=\"avg_qty_per_order\" type=\"number\" class=\"shiny-input-number form-control\" value=\"5\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"sd_qty_per_order-label\" for=\"sd_qty_per_order\">Standard Deviation of Quantity per Order</label>\n<input id=\"sd_qty_per_order\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1.25\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<h4>2. Delivery Lead Time</h4>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"avg_lead_time-label\" for=\"avg_lead_time\">Average Delivery Lead Time (days)</label>\n<input id=\"avg_lead_time\" type=\"number\" class=\"shiny-input-number form-control\" value=\"10\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"sd_lead_time-label\" for=\"sd_lead_time\">Standard Deviation of Delivery Lead Time</label>\n<input id=\"sd_lead_time\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<h4>3. Calculation Execution</h4>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"service_rate-label\" for=\"service_rate\">Service Rate (%)</label>\n<input class=\"js-range-slider\" id=\"service_rate\" data-skin=\"shiny\" data-min=\"50\" data-max=\"99\" data-from=\"99\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.8\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"order_interval_guideline-label\" for=\"order_interval_guideline\">Order Interval Guideline (days)</label>\n<input id=\"order_interval_guideline\" type=\"number\" class=\"shiny-input-number form-control\" value=\"4\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<button id=\"apply_conditions\" type=\"button\" class=\"btn btn-default action-button\">Apply Conditions</button>\n<h5>Derived Ordering Parameters:</h5>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"qty_based_order_qty-label\" for=\"qty_based_order_qty\">Quantity-Based Order Quantity</label>\n<input id=\"qty_based_order_qty\" type=\"number\" class=\"shiny-input-number form-control\" value=\"40\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"time_based_order_interval-label\" for=\"time_based_order_interval\">Time-Based Order Interval</label>\n<input id=\"time_based_order_interval\" type=\"number\" class=\"shiny-input-number form-control\" value=\"4\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"order_count_based_order_count-label\" for=\"order_count_based_order_count\">Order-Count Based Order Count</label>\n<input id=\"order_count_based_order_count\" type=\"number\" class=\"shiny-input-number form-control\" value=\"8\" data-update-on=\"change\" min=\"0\"/>\n</div>\n<button id=\"calculate\" type=\"button\" class=\"btn btn-default action-button\">Calculate Optimal Inventory</button>\n<button id=\"reset\" type=\"button\" class=\"btn btn-default action-button\">Reset</button>\n</form>\n</div>\n<div class=\"col-sm-8\" role=\"main\">\n<h4>Calculation Results</h4>\n<div id=\"results_table\" class=\"shiny-html-output shiny-table-output\"></div>\n</div>\n</div>\n</div>\n```\n\n:::\n:::\n\n:::\n\n::: {#app-server}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\n\nfunction(input, output, session) {\n  \n  observeEvent(input$apply_conditions, {\n    req(input$data_unit_time, input$avg_orders, input$avg_qty_per_order, input$order_interval_guideline)\n    \n    qty_based <- input$order_interval_guideline * input$avg_orders * input$avg_qty_per_order\n    order_count_based <- input$order_interval_guideline * input$avg_orders\n    \n    updateNumericInput(session, \"qty_based_order_qty\", value = qty_based)\n    updateNumericInput(session, \"time_based_order_interval\", value = input$order_interval_guideline)\n    updateNumericInput(session, \"order_count_based_order_count\", value = order_count_based)\n  })\n  \n  observeEvent(input$reset, {\n    updateNumericInput(session, \"data_unit_time\", value = 1)\n    updateNumericInput(session, \"avg_orders\", value = 2)\n    updateNumericInput(session, \"sd_orders\", value = 1.41)\n    updateNumericInput(session, \"avg_qty_per_order\", value = 5)\n    updateNumericInput(session, \"sd_qty_per_order\", value = 1.25)\n    updateNumericInput(session, \"avg_lead_time\", value = 10)\n    updateNumericInput(session, \"sd_lead_time\", value = 0)\n    updateSliderInput(session, \"service_rate\", value = 99)\n    updateNumericInput(session, \"order_interval_guideline\", value = 4)\n    updateNumericInput(session, \"qty_based_order_qty\", value = 40)\n    updateNumericInput(session, \"time_based_order_interval\", value = 4)\n    updateNumericInput(session, \"order_count_based_order_count\", value = 8)\n    output$results_table <- renderTable(NULL)\n  })\n  \n  output$results_table <- renderTable({\n    req(input$calculate)\n    \n    # Input parameters\n    data_unit_time <- input$data_unit_time\n    avg_orders <- input$avg_orders\n    sd_orders <- input$sd_orders\n    avg_qty_per_order <- input$avg_qty_per_order\n    sd_qty_per_order <- input$sd_qty_per_order\n    avg_lead_time <- input$avg_lead_time\n    sd_lead_time <- input$sd_lead_time\n    service_rate <- input$service_rate / 100\n    \n    # Calculate N and Vn (Number of orders per delivery LT)\n    N_bar <- avg_orders * avg_lead_time\n    Vn <- (sd_orders^2 * avg_lead_time) + (avg_orders^2 * sd_lead_time^2)\n    \n    # Calculate Q_bar and Vq (Quantity per order)\n    Q_bar <- avg_qty_per_order\n    Vq <- sd_qty_per_order^2\n    \n    # Calculate Ct (Coefficient of variation of delivery lead time)\n    Ct <- ifelse(avg_lead_time > 0, sd_lead_time / avg_lead_time, 0)\n    \n    results <- data.frame(\n      \"Ordering Method\" = character(),\n      \"Average\" = numeric(),\n      \"Variance\" = numeric(),\n      \"Optimal Inventory\" = numeric(),\n      stringsAsFactors = FALSE\n    )\n    \n    # Quantity-Based Ordering\n    Oc <- input$qty_based_order_qty\n    if (Oc > 0) {\n      mean_qty_based <- Q_bar * (N_bar + 0.5) + Oc / 2\n      var_qty_based <- Q_bar^2 * (Vn + N_bar^2 * Ct^2) + (N_bar + 0.5) * Vq + Oc^2 / 12\n      optimal_qty_based <- mean_qty_based + qnorm(service_rate) * sqrt(var_qty_based)\n      results <- rbind(results, data.frame(\n        \"Ordering Method\" = \"Quantity-Based\",\n        \"Average\" = round(mean_qty_based, 1),\n        \"Variance\" = round(var_qty_based, 1),\n        \"Optimal Inventory\" = round(optimal_qty_based)\n      ))\n    }\n    \n    # Time-Based Ordering\n    Ny_bar <- input$time_based_order_interval * avg_orders\n    Vny <- input$time_based_order_interval * sd_orders^2\n    if (input$time_based_order_interval > 0) {\n      mean_time_based <- Q_bar * (N_bar + Ny_bar / 2)\n      var_time_based <- Q_bar^2 * (Vn + N_bar^2 * Ct^2) + (N_bar + Ny_bar) * Vq + (Q_bar * Ny_bar)^2 / 12\n      optimal_time_based <- mean_time_based + qnorm(service_rate) * sqrt(var_time_based)\n      results <- rbind(results, data.frame(\n        \"Ordering Method\" = \"Time-Based\",\n        \"Average\" = round(mean_time_based, 1),\n        \"Variance\" = round(var_time_based, 1),\n        \"Optimal Inventory\" = round(optimal_time_based)\n      ))\n    }\n    \n    # Order-Count Based Ordering\n    Nc <- input$order_count_based_order_count\n    if (Nc > 0) {\n      mean_order_count_based <- Q_bar * (N_bar + (Nc - 1) / 2)\n      var_order_count_based <- Q_bar^2 * (Vn + N_bar^2 * Ct^2) + (N_bar + Nc - 1) * Vq + (Q_bar * Nc)^2 / 12\n      optimal_order_count_based <- mean_order_count_based + qnorm(service_rate) * sqrt(var_order_count_based)\n      results <- rbind(results, data.frame(\n        \"Ordering Method\" = \"Order-Count Based\",\n        \"Average\" = round(mean_order_count_based, 1),\n        \"Variance\" = round(var_order_count_based, 1),\n        \"Optimal Inventory\" = round(optimal_order_count_based)\n      ))\n    }\n    \n    results\n  })\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (input, output, session) \n{\n    observeEvent(input$apply_conditions, {\n        req(input$data_unit_time, input$avg_orders, input$avg_qty_per_order, \n            input$order_interval_guideline)\n        qty_based <- input$order_interval_guideline * input$avg_orders * \n            input$avg_qty_per_order\n        order_count_based <- input$order_interval_guideline * \n            input$avg_orders\n        updateNumericInput(session, \"qty_based_order_qty\", value = qty_based)\n        updateNumericInput(session, \"time_based_order_interval\", \n            value = input$order_interval_guideline)\n        updateNumericInput(session, \"order_count_based_order_count\", \n            value = order_count_based)\n    })\n    observeEvent(input$reset, {\n        updateNumericInput(session, \"data_unit_time\", value = 1)\n        updateNumericInput(session, \"avg_orders\", value = 2)\n        updateNumericInput(session, \"sd_orders\", value = 1.41)\n        updateNumericInput(session, \"avg_qty_per_order\", value = 5)\n        updateNumericInput(session, \"sd_qty_per_order\", value = 1.25)\n        updateNumericInput(session, \"avg_lead_time\", value = 10)\n        updateNumericInput(session, \"sd_lead_time\", value = 0)\n        updateSliderInput(session, \"service_rate\", value = 99)\n        updateNumericInput(session, \"order_interval_guideline\", \n            value = 4)\n        updateNumericInput(session, \"qty_based_order_qty\", value = 40)\n        updateNumericInput(session, \"time_based_order_interval\", \n            value = 4)\n        updateNumericInput(session, \"order_count_based_order_count\", \n            value = 8)\n        output$results_table <- renderTable(NULL)\n    })\n    output$results_table <- renderTable({\n        req(input$calculate)\n        data_unit_time <- input$data_unit_time\n        avg_orders <- input$avg_orders\n        sd_orders <- input$sd_orders\n        avg_qty_per_order <- input$avg_qty_per_order\n        sd_qty_per_order <- input$sd_qty_per_order\n        avg_lead_time <- input$avg_lead_time\n        sd_lead_time <- input$sd_lead_time\n        service_rate <- input$service_rate/100\n        N_bar <- avg_orders * avg_lead_time\n        Vn <- (sd_orders^2 * avg_lead_time) + (avg_orders^2 * \n            sd_lead_time^2)\n        Q_bar <- avg_qty_per_order\n        Vq <- sd_qty_per_order^2\n        Ct <- ifelse(avg_lead_time > 0, sd_lead_time/avg_lead_time, \n            0)\n        results <- data.frame(`Ordering Method` = character(), \n            Average = numeric(), Variance = numeric(), `Optimal Inventory` = numeric(), \n            stringsAsFactors = FALSE)\n        Oc <- input$qty_based_order_qty\n        if (Oc > 0) {\n            mean_qty_based <- Q_bar * (N_bar + 0.5) + Oc/2\n            var_qty_based <- Q_bar^2 * (Vn + N_bar^2 * Ct^2) + \n                (N_bar + 0.5) * Vq + Oc^2/12\n            optimal_qty_based <- mean_qty_based + qnorm(service_rate) * \n                sqrt(var_qty_based)\n            results <- rbind(results, data.frame(`Ordering Method` = \"Quantity-Based\", \n                Average = round(mean_qty_based, 1), Variance = round(var_qty_based, \n                  1), `Optimal Inventory` = round(optimal_qty_based)))\n        }\n        Ny_bar <- input$time_based_order_interval * avg_orders\n        Vny <- input$time_based_order_interval * sd_orders^2\n        if (input$time_based_order_interval > 0) {\n            mean_time_based <- Q_bar * (N_bar + Ny_bar/2)\n            var_time_based <- Q_bar^2 * (Vn + N_bar^2 * Ct^2) + \n                (N_bar + Ny_bar) * Vq + (Q_bar * Ny_bar)^2/12\n            optimal_time_based <- mean_time_based + qnorm(service_rate) * \n                sqrt(var_time_based)\n            results <- rbind(results, data.frame(`Ordering Method` = \"Time-Based\", \n                Average = round(mean_time_based, 1), Variance = round(var_time_based, \n                  1), `Optimal Inventory` = round(optimal_time_based)))\n        }\n        Nc <- input$order_count_based_order_count\n        if (Nc > 0) {\n            mean_order_count_based <- Q_bar * (N_bar + (Nc - \n                1)/2)\n            var_order_count_based <- Q_bar^2 * (Vn + N_bar^2 * \n                Ct^2) + (N_bar + Nc - 1) * Vq + (Q_bar * Nc)^2/12\n            optimal_order_count_based <- mean_order_count_based + \n                qnorm(service_rate) * sqrt(var_order_count_based)\n            results <- rbind(results, data.frame(`Ordering Method` = \"Order-Count Based\", \n                Average = round(mean_order_count_based, 1), Variance = round(var_order_count_based, \n                  1), `Optimal Inventory` = round(optimal_order_count_based)))\n        }\n        results\n    })\n}\n```\n\n\n:::\n:::\n\n:::\n\n### Conclusion\n\nCalculating optimal inventory is a critical aspect of effective supply chain management. By understanding the various input parameters, the underlying mathematical formulas, and embracing a dynamic approach, businesses can minimize costs associated with holding excess inventory while ensuring high service levels. The integration of interactive tools, such as a Shiny application, can further enhance the understanding and practical application of these concepts.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/jquery-3.7.1/jquery.min.js\"></script>\n<script src=\"../../site_libs/ionrangeslider-javascript-2.3.1/js/ion.rangeSlider.min.js\"></script>\n<script src=\"../../site_libs/strftime-0.9.2/strftime-min.js\"></script>\n<link href=\"../../site_libs/ionrangeslider-css-2.3.1/css/ion.rangeSlider.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}