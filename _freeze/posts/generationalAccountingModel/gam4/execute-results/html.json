{
  "hash": "00f6a62aa33d711ccb2d74d512fc5882",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Upgrading the OLG Model: Adding a Public Pension System\"\nsubtitle: \"Part 5 of a series on converting 'Matlabによるマクロ経済モデル入門' to R\"\ndate: \"2025-09-07\"\ncategories: [R, Economics, OLG, Social Security, Shiny]\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-tools: true\n    self-contained: true\n---\n\n\n## Introduction: Modeling Social Security\n\nIn our [previous posts](https://okihik.github.io/versatile-note.github.io/posts/generationalAccountingModel/gam3.html), we successfully built a complete, interactive Overlapping Generations (OLG) model in R. While powerful, our model was missing a feature that is central to every modern economy: a **public pension system**. For most retirees, social security is the single most important source of income, and for workers, it's one of their largest mandatory expenses.\n\nNo realistic analysis of long-term fiscal policy or demographic change can be complete without including it. The way a pension system is designed has profound effects on household savings decisions, national capital accumulation, and, most importantly, the distribution of resources between generations.\n\nIn this post, we will upgrade our R model by incorporating a **pay-as-you-go public pension system**, following the `OLG2.m` model from the textbook. This will allow us to analyze the effects of pension policy on the economy. We will then add interactive controls for these new policies to our Shiny application, creating an even more powerful tool for analysis.\n\n## The Economics of a Pay-As-You-Go Pension System\n\nThe model we'll build is a \"pay-as-you-go\" (PAYG) system, which is how social security works in most countries, including Japan. The logic is simple:\n\n*   The current **working generation** pays contributions (a tax on their wages).\n*   These contributions are **not saved or invested**. Instead, they are immediately transferred and paid out as benefits to the current **retired generation**.\n\nThis creates a direct link between the generations and makes the system highly sensitive to demographics. When the population is young (many workers per retiree), the system is easy to sustain with low contribution rates. However, as the population ages (fewer workers per retiree), the financial pressure mounts, requiring either higher contribution rates for the young, lower benefits for the old, or some combination of both.\n\nFrom a modeling perspective, a PAYG pension system acts as a substitute for private savings. Because individuals expect to receive pension benefits in retirement, they have less incentive to save on their own. This \"crowding out\" of private savings is a key mechanism through which pension systems can affect a country's long-run capital stock and economic growth.\n\n## Step 1: Modifying the R Code\n\nTo add the pension system, we need to make two main changes to our R code:\n\n1.  **Update the Household's Budget:** The lifetime budget constraint of each household must now include pension contributions (a cost during working years) and pension benefits (an income during retirement).\n2.  **Add a Pension System Module:** We need a new block of code that manages the pension system's finances, ensuring that total benefits paid out equal total contributions collected in each period.\n\n### Updating the Household Lifecycle\n\nThe core change happens when we solve for the household's consumption and savings path. Their lifetime resources are now affected by pension policy.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Conceptual R Code for Household with Pensions\"}\n# Inside the main simulation loop, when calculating a generation's resources...\n\n# Lifetime resources are now reduced by lifetime pension contributions\n# and increased by lifetime pension benefits.\n\n# Calculate lifetime resources for generation I\nfor (J in 1:IRET) { # Working years\n  # Subtract pension contributions (PP) from wage income\n  PDVW <- PDVW + (W[I+J-1]*SL[J]*(1-TW) - PP[I,J]) * RR[J] \n}\nfor (J in (IRET+1):IDIE) { # Retirement years\n  # Add pension benefits (PR) to retirement income\n  PDVW <- PDVW + PR[I,J] * RR[J]\n}\n\n# The rest of the household's problem (choosing consumption) proceeds as before,\n# but with this new, adjusted level of lifetime wealth.\n```\n:::\n\n\n### Creating the Pension Finance Module\n\nWe also need to add logic that calculates the total contributions (`AGPP`) and benefits (`AGPR`) for the entire economy each year. In a simple PAYG system, these must be equal.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Conceptual R Code for Pension System Finances\"}\n# Inside the main simulation loop, after aggregating household behavior...\n\n# Calculate total pension contributions from all working generations\nAGPP[I] <- 0\nfor (J in 1:IRET) {\n  # Sum up contributions from all relevant cohorts\n  AGPP[I] <- AGPP[I] + PP[I-J+1, J] * GENP[I-J+1]\n}\n\n# Calculate total pension benefits for all retired generations\nAGPR[I] <- 0\nfor (J in (IRET+1):IDIE) {\n  # Sum up benefits for all relevant cohorts\n  AGPR[I] <- AGPR[I] + PR[I-J+1, J] * GENP[I-J+1]\n}\n\n# In a pure PAYG system, we enforce AGPP[I] == AGPR[I].\n# Typically, the model solves for the contribution rate (a tax)\n# that is required to pay for a given level of benefits.\n```\n:::\n\n\n## Step 2: Upgrading the Shiny Application\n\nThe most exciting part is adding interactive controls for pension policy to our Shiny app. This will allow us to simulate major reforms with the click of a button. We'll add two new sliders to the sidebar.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"New Sliders for the Shiny App Sidebar\"}\n#| panel: sidebar\n\n# ... (existing sliders for taxes, etc.) ...\n\n# --- Pension Policy Controls ---\nsliderInput(\"replacement_rate\", \"Pension Replacement Rate (所得代替率)\", \n            min = 0.20, max = 0.60, value = 0.40, step = 0.05)\n\nsliderInput(\"retire_age\", \"Retirement Age (退職年齢)\", \n            min = 60, max = 70, value = 65, step = 1)\n```\n:::\n\n\nWith these controls, our Shiny app can now answer much more interesting questions:\n\n*   **What if we lower the generosity of pensions?** We can move the `replacement_rate` slider down and watch how it affects the national savings rate and long-term GDP.\n*   **What if we increase the retirement age?** We can move the `retire_age` slider up. This increases the number of contributors and reduces the number of beneficiaries, showing how it can alleviate fiscal pressure.\n\nThe output panel of the app would be updated to include new plots, such as the evolution of the **pension contribution rate** over time.\n\n## Conclusion\n\nBy incorporating a public pension system, our OLG model becomes a far more powerful and relevant tool for policy analysis. It allows us to move beyond abstract economic theory and engage directly with the real-world trade-offs involved in social security reform.\n\nThis upgrade demonstrates the modularity and extensibility of our R code. We were able to build upon our existing foundation to add a significant new feature. The next logical step? We could explore how these domestic policies interact with a global economy by opening our model to international capital flows.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}