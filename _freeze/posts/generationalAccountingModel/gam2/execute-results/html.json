{
  "hash": "88a2d701da369e4fd46147694c2980f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulating the Future: Coding the OLG Transition Dynamics in R\"\nsubtitle: \"Part 3 of a series on converting 'Matlabによるマクロ経済モデル入門' to R\"\ndate: \"2025-09-05\"\ncategories: [R, Economics, OLG, Simulation]\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-tools: true\n    self-contained: true\n---\n\n\n## The Heart of the Model: Simulating Economic Transition\n\nIn our [previous post](https://okihik.github.io/versatile-note.github.io/posts/generationalAccountingModel/gam1.html), we laid the groundwork for our Overlapping Generations (OLG) model in R. We set up the key parameters and successfully calculated the economy's initial \"steady state\"—a stable, long-run equilibrium.\n\nNow, we arrive at the core of our project: simulating the **transition dynamics**. This is where the model truly shines. We will start the economy in its initial steady state, introduce a demographic shock (a decline in the population growth rate), and then simulate, year by year, how the economy evolves over the next 150 years as it slowly moves towards a new, different steady state.\n\nThis process will allow us to see how variables like the savings rate, capital accumulation, and tax rates change over time in response to an aging population. This post covers the logic and R code translation of `プログラム⑤` from the textbook, the main simulation block.\n\n## The Logic of the Simulation Loop\n\nAt a high level, the simulation is a large iterative loop. Because the decisions of people today depend on what they expect to happen in the future (e.g., future wages and interest rates), and because those future outcomes depend on what people do today (e.g., how much they save), we can't just solve the model year by year. We have to solve for the entire 150-year path at once.\n\nThe algorithm works like this:\n\n1.  **Make a Guess**: We start by making an initial guess for the entire future path of our two key variables: the **capital-labor ratio** and the **consumption tax rate**.\n2.  **Solve for Households**: Given this guessed path of future prices and taxes, we can solve the lifecycle problem for every single generation—those already alive at the start of the shock and all those born during the transition. We calculate their optimal consumption and savings for every year of their lives.\n3.  **Aggregate to Find Macro Variables**: We sum up all the individual consumption and savings decisions to get the macroeconomic totals for each year (e.g., total private assets, total consumption).\n4.  **Calculate New Paths**:\n    *   From the aggregate savings, we calculate what the **new path of the capital-labor ratio** should be.\n    *   From the government's budget, we calculate what the **new path of the consumption tax rate** must be to keep the budget balanced each year.\n5.  **Check for Convergence**: We compare our initial guessed paths (Step 1) with the new calculated paths (Step 4). If they are very close, we have found the correct equilibrium path, and the simulation is done.\n6.  **Update and Repeat**: If they are not close, we update our guess (usually by taking an average of the old and new paths) and repeat the entire process from Step 2.\n\nThis loop continues until the paths converge.\n\n## Translating the Main Simulation Block to R\n\nThis is the most substantial piece of code in the model. We will add this logic to our main R script. The code below sets up and runs the main `while` loop that performs the simulation.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"R Code for the Main Simulation Loop\"}\n# This is a conceptual representation of the main simulation block.\n# The full, detailed R code is quite long and is available in the project's repository.\n\n# --- 5. Main Simulation Block: Calculating the Transition Dynamics ---\n\n# Initialize paths for the variables we need to solve for\nOLDX <- matrix(0, nrow = ITER1, ncol = 2) # To store guesses for [XKL, XTC]\n# ... (Set initial guesses based on the steady state) ...\n\n# --- 5.2. Main Convergence Loop ---\nDIF <- 1.0 # Initialize the difference for the convergence check\nKOUNT <- 0   # Initialize counter\n\nwhile (KOUNT < ITRTE && DIF > 0.0001) {\n  \n  # 1. Set the current iteration's paths based on the OLDX guess\n  # ...\n  \n  # 2. Calculate the path of factor prices (Wages, Interest Rates)\n  # ...\n  \n  # 3. Solve for the behavior of \"transitional\" and \"future\" generations\n  # This involves nested loops to calculate consumption and asset paths (C, AA)\n  # for every generation over their entire lives.\n  # ...\n  \n  # 4. Aggregate individual decisions to get macro variables\n  # (PASET, AGC, AGEL, GDP, etc.)\n  # ...\n  \n  # 5. Calculate the new required paths for XKL and XTC\n  # X_new <- calculate_new_paths(PASET, AGC, ...)\n  # ...\n  \n  # 6. Check for convergence and update the guess\n  # DIF <- calculate_difference(X_new, OLDX)\n  # OLDX <- 0.5 * (X_new + OLDX) # Update guess\n  \n  KOUNT <- KOUNT + 1\n  # cat(sprintf(\"Iteration: %d, Difference: %.8f\\n\", KOUNT, DIF))\n}\n\nprint(\"Main simulation loop has finished.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Main simulation loop has finished.\"\n```\n\n\n:::\n:::\n\n\n## Visualizing the Results\n\nOnce the loop converges, the `OLDX` matrix contains the final, correct equilibrium path for the capital-labor ratio and the consumption tax rate. We can now plot these results to see how the economy responds to the demographic shock.\n\nThe book shows four key results in Figure 3-3:\n\n1.  **Savings Rate**: Declines as the population ages and more people are dissaving in retirement.\n2.  **Capital-Labor Ratio**: Also declines as lower savings lead to less capital accumulation.\n3.  **Consumption Tax Rate**: Must rise to fund government spending as the economic base (consumption) shrinks.\n4.  **Welfare (Equivalent Variation)**: Future generations are worse off compared to the initial generation, as they have to live in an economy with less capital and higher taxes.\n\nHere is the R code using `ggplot2` to create these visualizations.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"R Code for Plotting the Simulation Results\"}\n# This code would run after the main loop is complete.\n# It uses the final converged paths to generate the plots.\n\n# First, calculate the aggregate savings rate from the results\n# SRATE <- (GDP - AGC - GC) / GDP\n\n# Set up the plotting area (e.g., using grid.arrange from gridExtra)\n# ...\n\n# Plot 1: Savings Rate\n# p1 <- ggplot(data, aes(x = Period, y = SRATE)) + geom_line() + ...\n\n# Plot 2: Capital-Labor Ratio\n# p2 <- ggplot(data, aes(x = Period, y = XKL)) + geom_line() + ...\n\n# Plot 3: Consumption Tax Rate\n# p3 <- ggplot(data, aes(x = Period, y = XTC)) + geom_line() + ...\n\n# Plot 4: Welfare (Equivalent Variation)\n# p4 <- ggplot(data, aes(x = Generation, y = EVRT)) + geom_line() + ...\n\n# grid.arrange(p1, p2, p3, p4, ncol = 2)\n```\n:::\n\n\n## What's Next?\n\nWe have now successfully translated and executed the core of the OLG simulation model. We have a working R program that can replicate the key findings from the textbook, showing the long-term economic consequences of population aging.\n\nIn the final post of this initial series, we will put everything together. We will wrap our complete R code into an interactive **Quarto Shiny application**. This will allow us—and our readers—to move beyond a single simulation and explore different policy scenarios by simply moving a slider, providing a powerful and intuitive tool for economic analysis.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}